#!/bin/sh
# postinst script for kamiwaza

set -e

# Detect OS
if [ "$(uname)" = "Linux" ]; then
    TAR_FILE="kamiwaza-community-0.3.3-UbuntuLinux.tar.gz"
    TAR_URL="https://github.com/kamiwaza-ai/kamiwaza-community-edition/raw/refs/heads/main/kamiwaza-community-0.3.3-UbuntuLinux.tar.gz"
elif [ "$(uname)" = "Darwin" ]; then
    TAR_FILE="kamiwaza-community-0.3.3-OSX.tar.gz"
    TAR_URL="https://github.com/kamiwaza-ai/kamiwaza-community-edition/raw/refs/heads/main/kamiwaza-community-0.3.3-OSX.tar.gz"
else
    echo "Unsupported operating system"
    exit 1
fi

# Create installation directory
INSTALL_DIR="/opt/kamiwaza"
mkdir -p $INSTALL_DIR
cd $INSTALL_DIR

# Download and extract the appropriate tar file
wget "$TAR_URL"
tar -xvf $TAR_FILE

# Run system updates
apt update
apt upgrade -y

# Install Python and dependencies
apt install -y python3.10 python3.10-dev libpython3.10-dev python3.10-venv golang-cfssl python-is-python3 etcd-client net-tools jq

# Install Docker and Docker Compose
apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt install -y docker-ce docker-ce-cli containerd.io
curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

# Install NVIDIA drivers and Docker configuration (Linux only)
if [ "$(uname)" = "Linux" ]; then
    apt install -y nvidia-driver-550-server
    curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
    curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
    tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
    apt update
    apt-get install -y nvidia-container-toolkit
    apt install -y nvidia-docker2
    systemctl restart docker
    usermod -aG docker $SUDO_USER
fi

# Install additional dependencies
apt install -y libcairo2-dev libgirepository1.0-dev

# Find and run the installation script
KAMIWAZA_DIR=$(find . -type d -name "kamiwaza-community-*" | head -n 1)
if [ -n "$KAMIWAZA_DIR" ]; then
    cd "$KAMIWAZA_DIR"
    if [ -f "install.sh" ]; then
        echo "Running install.sh..."
        bash install.sh --community
    else
        echo "Error: install.sh not found in $KAMIWAZA_DIR"
        exit 1
    fi
else
    echo "Error: Could not find kamiwaza-community directory"
    exit 1
fi

# Set permissions
chown -R $SUDO_USER:$SUDO_USER $INSTALL_DIR

# Create startup script
cat > /etc/systemd/system/kamiwaza.service << EOF
[Unit]
Description=Kamiwaza Service
After=network.target

[Service]
Type=simple
User=$SUDO_USER
WorkingDirectory=$INSTALL_DIR
ExecStart=/usr/bin/kamiwazad start
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

# Enable and start the service
systemctl daemon-reload
systemctl enable kamiwaza
systemctl start kamiwaza

# Cleanup
rm $TAR_FILE

exit 0 